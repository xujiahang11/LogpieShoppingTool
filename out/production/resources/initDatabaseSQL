create database LogpieMIS character set = utf8;

create table if not exists Shop(shopId serial primary key, shopName text not null, logo text, sLogo text, shopExp int default 0 not null, shopRegisterTime timestamp not null default CURRENT_TIMESTAMP, shopPath varchar(80) not null unique);

create table if not exists Admin(adminId serial primary key, adminName text not null, adminEmail text, adminPhone text, profitPercentage float default 1.0 not null, adminShopId bigint unsigned, foreign key (adminShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Client(clientId serial primary key, clientName text not null, clientPhone text not null, clientWechatDirectedId text, clientWechatId text, clientWechatName text, clientNote text, clientRegisterTime timestamp not null default current_timestamp, clientShopId bigint unsigned, foreign key (clientShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Address(addressId serial primary key, address text not null, addressRecipient text not null, addressPhone text not null, addressZip text, addressClientId bigint unsigned, foreign key (addressClientId) references Client(clientId) on update cascade on delete cascade); 

create table if not exists Brand(brandId serial primary key, brandName text not null, brandShopId bigint unsigned, foreign key (brandShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Category(categoryId serial primary key, categoryName text not null, categoryShopId bigint unsigned, foreign key (categoryShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists SubCategory(subcategoryId serial primary key, subcategoryName text not null, subcategoryCategoryId bigint unsigned, foreign key (subcategoryCategoryId) references Category(categoryId) on update cascade on delete cascade);

create table if not exists Product(productId serial primary key, productName text not null, productPostDate timestamp not null default current_timestamp, productBrandId bigint unsigned, productSubCategoryId bigint unsigned, productNote text, productShopId bigint unsigned, foreign key (productShopId) references Shop(shopId) on update cascade on delete cascade, foreign key (productBrandId) references Brand(brandId) on update cascade on delete cascade, foreign key (productSubCategoryId) references SubCategory(subcategoryId) on update cascade on delete cascade);

create table if not exists ProductConfig(configId serial primary key, configDescription text not null, configPrice float not null default 0, configWeight float not null default 0, configItemNumber text, configProductId bigint unsigned, foreign key (configProductId) references Product(productId) on update cascade on delete cascade);

create table if not exists Orders(orderId serial primary key, orderPostDate timestamp not null default current_timestamp, orderCustomer text not null, orderClientId bigint unsigned, orderAdminId bigint unsigned, orderFinalPrice float not null default 0, orderStatus text not null, orderShopId bigint unsigned, foreign key (orderClientId) references Client(clientId) on update cascade on delete cascade, foreign key (orderAdminId) references Admin(adminId) on update cascade on delete cascade, foreign key (orderShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Transaction(transactionId serial primary key, transactionClientId bigint unsigned, transactionProductId bigint unsigned, transactionQuantity int not null default 1, transactionUnitPrice float not null, transactionPayment float not null default 0, transactionOrderId bigint unsigned, transactionIsReturned boolean not null default false, foreign key (transactionClientId) references Client(clientId) on update cascade on delete cascade, foreign key (transactionOrderId) references Orders(orderId) on update cascade on delete cascade, foreign key (transactionProductId) references Product(productId) on update cascade on delete cascade);

create table if not exists Express(expressId serial primary key, expressName text not null, expressIsInternational boolean not null default false, expressShopId bigint unsigned, foreign key (expressShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Package(packageId serial primary key, packageExpressId bigint unsigned, trackingNumber text, packageClientId bigint unsigned, receiver text not null, destination text not null, isDirectDelivered boolean not null default true, packagePostDate timestamp not null default current_timestamp, packageWeight int not null default 0, shippingFee float not null default 0, additionalFee float not null default 0, packageStatus text not null, packageNote text, packageShopId bigint unsigned, foreign key (packageExpressId) references Express(expressId) on update cascade on delete cascade, foreign key (packageClientId) references Client(clientId) on update cascade on delete cascade, foreign key (packageShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists ShippingRecord(recordId serial primary key, recordPackageId bigint unsigned, recordTransactionId bigint unsigned, foreign key (recordPackageId) references Package(packageId) on update cascade on delete cascade, foreign key (recordTransactionId) references Transaction(transactionId) on update cascade on delete cascade);

create table if not exists Cost(costId serial primary key, costCreationTime timestamp not null default current_timestamp, costName text not null, costType text not null, costDescription text, costValue float not null, costShopId bigint unsigned, foreign key (costShopId) references Shop(shopId) on update cascade on delete cascade);

create table if not exists Setting(settingId serial primary key, lang text not null, currency text not null, weightUnit text not null, settingAdminId bigint unsigned, foreign key (settingAdminId) references Admin(adminId) on update cascade on delete cascade);