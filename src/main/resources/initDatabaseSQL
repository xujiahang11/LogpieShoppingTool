create database LogpieMIS character set = utf8;

create table if not exists Shop(id serial primary key, name text not null, logo text, sLogo text, exp int default 0 not null, registerDate timestamp not null default CURRENT_TIMESTAMP, path varchar(80) not null unique);

create table if not exists Admin(id serial primary key, name text not null, email text, phone text, profitPercentage float default 1.0 not null, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists Client(id serial primary key, name text not null, phone text not null, wechatDirectedId text, wechatId text, wechatName text, note text, registerDate timestamp not null default current_timestamp, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists Address(id serial primary key, address text not null, recipient text not null, phone text not null, zip text, clientId bigint unsigned, foreign key (clientId) references Client(id) on update cascade on delete cascade); 

create table if not exists Brand(id serial primary key, name text not null, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists Category(id serial primary key, name text not null, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists SubCategory(id serial primary key, name text not null, categoryId bigint unsigned, foreign key (categoryId) references Category(id) on update cascade on delete cascade);

create table if not exists Product(id serial primary key, name text not null, price float default 0, weight int unsigned, postDate timestamp not null default current_timestamp, brandId bigint unsigned, subCategoryId bigint unsigned, originalId text, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade, foreign key (brandId) references Brand(id) on update cascade on delete cascade, foreign key (subCategoryId) references SubCategory(id) on update cascade on delete cascade);

create table if not exists ProductConfig(id serial primary key, description text not null, productId bigint unsigned, foreign key (productId) references Product(id) on update cascade on delete cascade);

create table if not exists Orders(id serial primary key, postDate timestamp not null default current_timestamp, customer text not null, clientId bigint unsigned, adminId bigint unsigned, finalPrice float not null default 0, status text not null, shopId bigint unsigned, foreign key (clientId) references Client(id) on update cascade on delete cascade, foreign key (adminId) references Admin(id) on update cascade on delete cascade, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists Transaction(id serial primary key, clientId bigint unsigned, productId bigint unsigned, quantity int not null default 1, unitPrice float not null, payment float not null default 0, orderId bigint unsigned, isReturned boolean not null default false, note text, foreign key (clientId) references Client(id) on update cascade on delete cascade, foreign key (orderId) references Orders(id) on update cascade on delete cascade, foreign key (productId) references Product(id) on update cascade on delete cascade);

create table if not exists Express(id serial primary key, name text not null, isInternational boolean not null default false, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists Package(id serial primary key, expressId bigint unsigned, trackingNumber text, clientId bigint unsigned, receiver text not null, destination text not null, isDirectDelivered boolean not null default true, postDate timestamp not null default current_timestamp, weight int not null default 0, shippingFee float not null default 0, additionalFee float not null default 0, status text not null, note text, shopId bigint unsigned, foreign key (expressId) references Express(id) on update cascade on delete cascade, foreign key (clientId) references Client(id) on update cascade on delete cascade, foreign key (shopId) references Shop(id) on update cascade on delete cascade);

create table if not exists ShippingRecord(id serial primary key, packageId bigint unsigned, transactionId bigint unsigned, foreign key (packageId) references Package(id) on update cascade on delete cascade, foreign key (transactionId) references Transaction(id) on update cascade on delete cascade);

create table if not exists Cost(id serial primary key, creationTime timestamp not null default current_timestamp, name text not null, type text not null, desc text, value float not null, shopId bigint unsigned, foreign key (shopId) references Shop(id) on update cascade on delete cascade);